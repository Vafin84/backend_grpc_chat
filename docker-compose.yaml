version: '3.5'

services:
  auth:
    container_name: auth
    build: ./auth
    depends_on:
      - db_auth
    # ports:
    #   - ${auth_port}:${auth_port}
    networks:
      - server_net
    environment:
      PORT: ${auth_port}
      SK: ${sk}
      DB_HOST_ADDRESS: db_auth
      DB_PORT: ${db_port_auth}
      DB_USERNAME: ${db_user_auth}
      DB_PASSWORD: ${db_password_auth}
      DB_SSL: ${db_use_ssl}
      DB_SK: ${db_sk_auth}
      ACCESS_TOKEN_LIFE: 100
      REFRESH_TOKEN_LIFE: 200
    deploy:
      resources:
        limits:
          memory: 50M  

  db_auth:
    container_name: db_auth
    ports:
      - ${db_port_auth}:${db_port_auth}

    environment:
      POSTGRES_USER: ${db_user_auth}
      POSTGRES_PASSWORD: ${db_password_auth}

    image: postgres:15-alpine
    command:
      - 'postgres'
      - '-c'
      - 'port=${db_port_auth}'
    volumes:
      - db_auth_vol:/var/lib/postgresql/data
    networks:
      - server_net
    deploy:
      resources:
        limits:
          memory: 50M        

  db_chats:
    container_name: db_chats
    ports:
      - ${db_port_chats}:${db_port_chats}

    environment:
      POSTGRES_USER: ${db_user_chats}
      POSTGRES_PASSWORD: ${db_password_chats}

    image: postgres:15-alpine
    command:
      - 'postgres'
      - '-c'
      - 'port=${db_port_chats}'
    volumes:
      - db_chats_vol:/var/lib/postgresql/data
    networks:
      - server_net
    deploy:
      resources:
        limits:
          memory: 50M        

  chats:
    container_name: chats
    build: ./chats
    depends_on:
      - db_chats
    # ports:
    #   - ${chats_port}:${chats_port}
    networks:
      - server_net
    environment:
      PORT: ${chats_port}
      SK: ${sk}
      DB_HOST_ADDRESS: db_chats
      DB_PORT: ${db_port_chats}
      DB_USERNAME: ${db_user_chats}
      DB_PASSWORD: ${db_password_chats}
      DB_SSL: ${db_use_ssl}
      DB_SK: ${db_sk_chats}
    deploy:
      resources:
        limits:
          memory: 50M        

  # nginx:
  #   container_name: nginx
  #   ports:
  #     - 8500:8500
  #   depends_on:
  #     - auth
  #     - chats
  #   networks:
  #     - server_net
  #   build: ./nginx

  envoy:
    container_name: envoy
    ports:
      - 8500:8500
    depends_on:
      - auth
      - chats
    networks:
      - server_net
    build: ./envoy
    deploy:
      resources:
        limits:
          memory: 50M      



volumes:
  db_auth_vol: {}
  db_chats_vol: {}
networks:
  server_net:
    driver: bridge
